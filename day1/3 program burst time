//Write a program to compute the average waiting time and average turnaround time based on Non Preemptive Shortest-Job-First Scheduling for the following process with the given CPU burst times, ( and the assumption that all jobs arrive at the same time.)//
#include <stdio.h>

int main() {
    int n, burst_time[100], wt[100], tat[100];
    float avg_wt = 0, avg_tat = 0;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        printf("Enter the burst time for process P%d: ", i+1);
        scanf("%d", &burst_time[i]);
    }
    for (int i = 0; i < n; i++) {
        int min_idx = i;
        for (int j = i+1; j < n; j++) {
            if (burst_time[j] < burst_time[min_idx]) {
                min_idx = j;
            }
        }
        int temp = burst_time[i];
        burst_time[i] = burst_time[min_idx];
        burst_time[min_idx] = temp;
    }

    wt[0] = 0;
    tat[0] = burst_time[0];
    for (int i = 1; i < n; i++) {
        wt[i] = wt[i-1] + burst_time[i-1];
        tat[i] = tat[i-1] + burst_time[i];
    }

    printf("Process\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("P%d\t\t%d\t\t%d\t\t%d\n", i+1, burst_time[i], wt[i], tat[i]);
        avg_wt += wt[i];
        avg_tat += tat[i];
    }
    avg_wt /= n;
    avg_tat /= n;

    printf("Average waiting time: %.2f\n", avg_wt);
    printf("Average turnaround time: %.2f\n", avg_tat);

    return 0;
}
